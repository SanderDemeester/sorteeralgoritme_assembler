;; print something
%macro write 2
        pushad
	mov eax,4		; write syscall
	mov ebx,STDOUT		; stdout
	mov edx,%2		; number of bytes
	mov ecx,%1		; buffer
	int 80h			; call kernel
	popad
%endmacro

;; switch two locations in memory
%macro sw 2
	push eax
	push ebx

	mov eax,%1
	mov ebx,%2
	
	xor eax,ebx	
	xor ebx,eax
	xor eax,ebx

	mov %1,eax,
	mov %2,ebx
	
	pop ebx
	pop eax
%endmacro

%macro printint 2
	pushad			
       	mov dword eax,[eax*4+esi]		; save integer to eax
	xor ecx,ecx		; clear out ecx
	mov esi,eax
	;; count number of digiste required

	push eax		; save integer
	mov ebx,10		;
.c:
	inc ecx
	xor edx,edx
	div ebx
	cmp eax,0
	jnz .c

	mov eax,buffer	; move buffer to eax
	add eax,ecx		; add offset to buffer
	mov ebx,eax
	mov byte [ebx],0
	
.a:
	dec ebx			; decrement pointer
	pop eax			; bring back our integer
	xor edx,edx		; clear out edx
	mov ecx,10		; move 10 to ecx
	div ecx			; div
	xchg eax,edx		; eax is now remainer
	
	add eax,48
	mov byte [ebx],al
	xchg eax,edx
	mov dword [esp],eax
	mov eax,dword [esp]
	sub eax,0
	jnz .a
		
	write buffer,4
	popad
%endmacro